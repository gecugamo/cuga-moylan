/*
 * 2.0 Global
 *****************************************************************************************************************************/
/* Apply border box globally */
*,
*::before,
*::after {
  box-sizing: border-box;
  outline: 0;
  transition: all 1s ease-in-out;
}

/* Set root font size to 10px for easy manipulation with rem units */
html {
  font-size: 62.5%;
}

body,
p {
  color: $body-color;
  font: {
    family: $body-font-family;
    size: $body-font-size;
    weight: $body-font-weight;
  }
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: $body-line-height;
}

/* Headings */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-bottom: 2rem;
  color: $heading-color;
  font: {
    family: $heading-font-family;
    weight: $heading-font-weight;
  }
  line-height: $heading-line-height;
  text-transform: lowercase;
}

h1 {
  font-size:  3.6rem;
}

h2 {
  font-size: 3.2rem;
}

h3 {
  font-size: 2.8rem;
}

h4 {
  font-size: 2.4rem;
}

h5 {
  font-size: 2rem;
}

h6 {
  font-size: 1.6rem;
}

/* Paragraphs */
p {
  margin-bottom: 2rem;
}

/* Links */
a {
  color: $link-color;
  text-decoration: none;

  &:hover,
  &:focus {
    color: lighten($link-color, 25%);
    outline: 0;
    text-decoration: none;
  }
}

/* Text selection */
::selection {
  color: #fff;
  background: $charcoal;
}

/*
 * 2.1 Grid
 *****************************************************************************************************************************/
$columns: $grid-columns;
$gutter: $grid-gutter;

.container,
.container-fluid {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: $gutter;
  padding-left: $gutter;
}

.row {
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-right: -$gutter;
  margin-left: -$gutter;
}

.row.reverse {
  flex-direction: row-reverse;
}

.col.reverse {
  flex-direction: column-reverse;
}

[class*=col-] {
    flex-basis: 100%;
    max-width: 100%;
    padding-right: $gutter;
    padding-left: $gutter;
}

[class*=col-xs] {
  flex: 0 0 auto;
}

.col-xs {
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
}

$i: 1;
@while $i <= $columns {
  .col-xs-#{$i} {
    flex-basis: 100% / $columns * $i;
    max-width: 100% / $columns * $i;
  }
  $i: $i + 1;
}

$i: 1;
@while $i <= $columns {
  .col-xs-offset-#{$i} {
    margin-left: 100% / $columns * $i;
  }
  $i: $i + 1;
}

.start-xs {
  justify-content: flex-start;
  text-align: start;
}

.center-xs {
  justify-content: center;
  text-align: center;
}

.end-xs {
  justify-content: flex-end;
  text-align: end;
}

.top-xs {
  align-items: flex-start;
}

.middle-xs {
  align-items: center;
}

.bottom-xs {
  align-items: flex-end;
}

.around-xs {
  justify-content: space-around;
}

.between-xs {
  justify-content: space-between;
}

.first-xs {
  order: -1;
}

.last-xs {
  order: 1;
}

@media only screen and (min-width: 768px) {
  .container {
    width: 75rem;
  }

  [class*=col-sm] {
    flex: 0 0 auto;
  }

  .col-sm {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
  }

  $i: 1;
  @while $i <= $columns {
    .col-sm-#{$i} {
      flex-basis: 100% / $columns * $i;
      max-width: 100% / $columns * $i;
    }
    $i: $i + 1;
  }

  $i: 1;
  @while $i <= $columns {
    .col-sm-offset-#{$i} {
      margin-left: 100% / $columns * $i;
    }
    $i: $i + 1;
  }

  .start-sm {
    justify-content: flex-start;
    text-align: start;
  }

  .center-sm {
    justify-content: center;
    text-align: center;
  }

  .end-sm {
    justify-content: flex-end;
    text-align: end;
  }

  .top-sm {
    align-items: flex-start;
  }

  .middle-sm {
    align-items: center;
  }

  .bottom-sm {
    align-items: flex-end;
  }

  .around-sm {
    justify-content: space-around;
  }

  .between-sm {
    justify-content: space-between;
  }

  .first-sm {
    order: -1;
  }

  .last-sm {
    order: 1;
  }
}

@media only screen and (min-width: 992px) {
  .container {
    width: 97rem;
  }

  [class*=col-md] {
    flex: 0 0 auto;
  }

  .col-md {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
  }

  $i: 1;
  @while $i <= $columns {
    .col-md-#{$i} {
      flex-basis: 100% / $columns * $i;
      max-width: 100% / $columns * $i;
    }
    $i: $i + 1;
  }

  $i: 1;
  @while $i <= $columns {
    .col-md-offset-#{$i} {
      margin-left: 100% / $columns * $i;
    }
    $i: $i + 1;
  }

  .start-md {
    justify-content: flex-start;
    text-align: start;
  }

  .center-md {
    justify-content: center;
    text-align: center;
  }

  .end-md {
    justify-content: flex-end;
    text-align: end;
  }

  .top-md {
    align-items: flex-start;
  }

  .middle-md {
    align-items: center;
  }

  .bottom-md {
    align-items: flex-end;
  }

  .around-md {
    justify-content: space-around;
  }

  .between-md {
    justify-content: space-between;
  }

  .first-md {
    order: -1;
  }

  .last-md {
    order: 1;
  }
}

@media only screen and (min-width: 1200px) {
  .container {
    width: 117rem;
  }

  [class*=col-lg] {
    flex: 0 0 auto;
  }

  .col-lg {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
  }

  $i: 1;
  @while $i <= $columns {
    .col-lg-#{$i} {
      flex-basis: 100% / $columns * $i;
      max-width: 100% / $columns * $i;
    }
    $i: $i + 1;
  }

  $i: 1;
  @while $i <= $columns {
    .col-lg-offset-#{$i} {
      margin-left: 100% / $columns * $i;
    }
    $i: $i + 1;
  }

  .start-lg {
    justify-content: flex-start;
    text-align: start;
  }

  .center-lg {
    justify-content: center;
    text-align: center;
  }

  .end-lg {
    justify-content: flex-end;
    text-align: end;
  }

  .top-lg {
    align-items: flex-start;
  }

  .middle-lg {
    align-items: center;
  }

  .bottom-lg {
    align-items: flex-end;
  }

  .around-lg {
    justify-content: space-around;
  }

  .between-lg {
    justify-content: space-between;
  }

  .first-lg {
    order: -1;
  }

  .last-lg {
    order: 1;
  }
}

/*
 * 2.2 Header
 *****************************************************************************************************************************/
.header {
  height: 100vh;
  background: #fff url('assets/img/desk.jpg') no-repeat;
  background-size: cover;
  text-align: center;
}

.no-touch .header {
  background-attachment: fixed;
}

.header-overlay {
  height: 100%;
  background-color: rgba($blue, .95);
  animation: bg-color-change  15s linear infinite;
}

.header-content {
  @extend .container;
  position: relative;
  top: 50%;
  transform: translateY(-50%);

  * {
    color: #fff;
  }

  > h1 {
    font: {
      family: $oswald;
      size: 7.5rem;
    };
  }

  > a {
    @include down-up();
  }
}

/*
 * 2.3 Footer
 *****************************************************************************************************************************/
.footer {
    margin-top: 6rem;
    border-top: 1px solid $faint;
    padding-top: 8rem;
    padding-bottom: 2rem;
    text-align: center;
}

.footer .container {
    width: 30rem;
}

/*
 * 2.4 Forms
 *****************************************************************************************************************************/
/* Form focus effects inspired by
http://tympanus.net/Development/TextInputEffects/ */

form {
    margin-top: -3rem;
}

input,
textarea,
.form-group {
    display: block;
    width: 100%;
}

input,
textarea {
    border-width: 0 0 .1rem 0;
    border-style: solid;
    border-color: $faint;
    color: $charcoal;
    font: {
        family: $body-font-family;
        size: 1.4rem;
    };
}

input {
    height: 4rem;
}

textarea {
    height: 12rem;
    resize: none;
}

.form-group {
    position: relative;
    padding-top: 3rem;
}

.form-group:not(:last-child) {
    margin-bottom: 3rem;
}

label {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

label > span,
label::after {
    transition: all ease-in-out 250ms;
}

label > span {
    display: inline-block;
    transform: translateY(3rem);
}

label::after {
    content: ' ';
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: .4rem;
    background-color: $light-blue;
}

.form-group:nth-child(2n) label::after {
    background-color: $light-violet;
}

.form-group:nth-child(3n) label::after {
    background-color: $light-green;
}

input.filled + label > span,
textarea.filled + label > span {
    transform: translateY(0);
}

input.filled + label::after,
textarea.filled + label::after {
    width: 100%;
}

/*
 * 2.5 Buttons
 *****************************************************************************************************************************/
.button {
    display: inline-block;
    border: 0;
    padding: 1.5rem 3rem;
    color: #fff;
    background-color: $light-blue;
    text-transform: lowercase;
}