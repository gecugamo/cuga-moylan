// Function to generate column widths
// for different screen sizes
@mixin columnGenerator($prefix, $sizes) {
	@for $i from 1 through length($sizes) {
			.#{$prefix}-#{nth($sizes, $i)} {
				flex-basis: 100% / ($i + 1);
				max-width: 100% / ($i + 1);
			}
		}
}

// List of widths passed to columnGenerator function
$widths: "half", "third", "fourth", "fifth";

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
	font-size: 62.5%;
}

body {
	font-size: 1.6rem;
}

p {
 margin-bottom: 2rem;
}

.container {
	  margin-right: auto;
		margin-left: auto;
		padding-right: 1.5rem;
		padding-left: 1.5rem;

		@media #{$screen-sm-min} {
			width: 75rem;
		}

		@media #{$screen-md-min} {
			width: 97rem;
		}

		@media #{$screen-lg-min} {
			width: 117rem;
		}
}

.flex-row {
  display: flex;
  flex-flow: row wrap;
	margin-right: -1.5rem;
	margin-left: -1.5rem;

	// Helper classes
	&.flex-center {
		align-items: center;
	}

	// Helper classes
	&.flex-dist .flex-item{
		flex-basis: 0;
	}
}

.flex-item {
  flex-grow: 1;
  flex-shrink: 0;
  flex-basis: 100%;
  padding-right: 1.5rem;
  padding-left: 1.5rem;
}

@media #{$screen-xs-min} {
	@include columnGenerator('xs', $widths);
}

@media #{$screen-sm-min} {
	@include columnGenerator('sm', $widths);
}

@media #{$screen-md-min} {
	@include columnGenerator('md', $widths);
}

@media #{$screen-lg-min} {
	@include columnGenerator('lg', $widths);
}
