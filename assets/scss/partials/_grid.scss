// ********* 
// VARIABLES
// *********

// Set the breakpoint at which the columns stack
$breakpoint: 640px;

// Container width
$container-width: 960px;

// Set the gutter width
$gutter-width: 20px;


/**********/
/** GRID **/
/**********/

// Allows border and padding to be calculated
// in elements' dimensions
*,
*::before,
*::after {
    box-sizing: border-box;
}

// Full width on screens below 1000px, 960px on screens above
.container {
  margin-right: auto;
  margin-left: auto;
  padding-right: $gutter-width / 2;
  padding-left: $gutter-width / 2;

  @media only screen and (min-width: $container-width + $gutter-width) {
    width: $container-width + $gutter-width;
  }
}

// Half of the flex equation - the parent element
// The negative margins allow for nesting of columns
.row {
    display: flex;
    flex-flow: row wrap;
    margin-right: $gutter-width / -2;
    margin-left:  $gutter-width / -2;
}

// The other half of the flex equation - the child element
// our columns automatically size themselves
.column {
    position: relative;
    flex: 1 0 100%;
    max-width: 100%; // Fallback for browsers that don't support calc
    max-width: calc(100% - #{$gutter-width});
    min-height: 1px;
    margin-right: $gutter-width / 2;
    margin-left: $gutter-width / 2;

  @media only screen and (min-width: $breakpoint) {
    flex-basis: 0;
  }
}
